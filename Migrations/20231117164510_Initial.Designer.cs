// <auto-generated />
using System;
using LectureSpacesApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LectureSpacesApp.Migrations
{
    [DbContext(typeof(LectureSpacesAppContext))]
    [Migration("20231117164510_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("LectureSpacesApp.models.Admin", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("contrasena")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Admin");
                });

            modelBuilder.Entity("LectureSpacesApp.models.Cuestionario", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("descripicion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Cuestionario");
                });

            modelBuilder.Entity("LectureSpacesApp.models.LectureSpaceComponent", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int?>("UsuarioID")
                        .HasColumnType("int");

                    b.Property<int?>("cuestionarioID")
                        .HasColumnType("int");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("videoID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UsuarioID");

                    b.HasIndex("cuestionarioID");

                    b.HasIndex("videoID");

                    b.ToTable("LectureSpaceComponent");
                });

            modelBuilder.Entity("LectureSpacesApp.models.Pregunta", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int?>("CuestionarioID")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioID")
                        .HasColumnType("int");

                    b.Property<int?>("correctaID")
                        .HasColumnType("int");

                    b.Property<string>("enunciado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("votos")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CuestionarioID");

                    b.HasIndex("UsuarioID");

                    b.HasIndex("correctaID");

                    b.ToTable("Pregunta");
                });

            modelBuilder.Entity("LectureSpacesApp.models.Recurso", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int?>("LectureSpaceComponentID")
                        .HasColumnType("int");

                    b.Property<string>("contenido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("imagenUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("rating")
                        .HasColumnType("int");

                    b.Property<string>("titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("LectureSpaceComponentID");

                    b.ToTable("Recurso");
                });

            modelBuilder.Entity("LectureSpacesApp.models.Respuesta", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int?>("PreguntaID")
                        .HasColumnType("int");

                    b.Property<string>("contenido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("PreguntaID");

                    b.ToTable("Respuesta");
                });

            modelBuilder.Entity("LectureSpacesApp.models.Usuario", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("contrasena")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("LectureSpacesApp.models.Video", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Video");
                });

            modelBuilder.Entity("LectureSpacesApp.models.LectureSpaceComponent", b =>
                {
                    b.HasOne("LectureSpacesApp.models.Usuario", null)
                        .WithMany("LectureSpaceComponents")
                        .HasForeignKey("UsuarioID");

                    b.HasOne("LectureSpacesApp.models.Cuestionario", "cuestionario")
                        .WithMany()
                        .HasForeignKey("cuestionarioID");

                    b.HasOne("LectureSpacesApp.models.Video", "video")
                        .WithMany()
                        .HasForeignKey("videoID");

                    b.Navigation("cuestionario");

                    b.Navigation("video");
                });

            modelBuilder.Entity("LectureSpacesApp.models.Pregunta", b =>
                {
                    b.HasOne("LectureSpacesApp.models.Cuestionario", null)
                        .WithMany("Preguntas")
                        .HasForeignKey("CuestionarioID");

                    b.HasOne("LectureSpacesApp.models.Usuario", null)
                        .WithMany("Preguntas")
                        .HasForeignKey("UsuarioID");

                    b.HasOne("LectureSpacesApp.models.Respuesta", "correcta")
                        .WithMany()
                        .HasForeignKey("correctaID");

                    b.Navigation("correcta");
                });

            modelBuilder.Entity("LectureSpacesApp.models.Recurso", b =>
                {
                    b.HasOne("LectureSpacesApp.models.LectureSpaceComponent", null)
                        .WithMany("recursos")
                        .HasForeignKey("LectureSpaceComponentID");
                });

            modelBuilder.Entity("LectureSpacesApp.models.Respuesta", b =>
                {
                    b.HasOne("LectureSpacesApp.models.Pregunta", null)
                        .WithMany("Respuestas")
                        .HasForeignKey("PreguntaID");
                });

            modelBuilder.Entity("LectureSpacesApp.models.Cuestionario", b =>
                {
                    b.Navigation("Preguntas");
                });

            modelBuilder.Entity("LectureSpacesApp.models.LectureSpaceComponent", b =>
                {
                    b.Navigation("recursos");
                });

            modelBuilder.Entity("LectureSpacesApp.models.Pregunta", b =>
                {
                    b.Navigation("Respuestas");
                });

            modelBuilder.Entity("LectureSpacesApp.models.Usuario", b =>
                {
                    b.Navigation("LectureSpaceComponents");

                    b.Navigation("Preguntas");
                });
#pragma warning restore 612, 618
        }
    }
}
